import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from info import *
from parol import token
from telebot.types import InputFile


TOKEN = token  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(TOKEN)


filename = "user_data.json"
anketa_file = "anketa_progress.json"

anketa_questions = ["–û—Ç–∫–ª–∞–¥—ã–≤–∞–ª–∏ –ª–∏ –≤—ã –ø–æ–¥—ä–µ–º –Ω–∞ 5 –º–∏–Ω—É—Ç, –∞ –∑–∞—Ç–µ–º –µ—â–µ –Ω–∞ 5, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ, —á—Ç–æ–±—ã '—Å–ª—É—á–∞–π–Ω–æ' –ø—Ä–æ—Å–ø–∞—Ç—å?",
                    "–ü—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –ª–∏ –≤–∞–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–∞–ª–∫—É –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∞—Ç—å —á—Ç–æ-—Ç–æ, –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—Å—Ç–∞—Ç—å –∏ –≤–∑—è—Ç—å —ç—Ç–æ?",
                    "–í—ã —á–∞—Å—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–µ, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∏–¥—É—Ç, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–∏—Å–∫–∞ –ø—É–ª—å—Ç–∞?ü¶≠",
                    "–ë—ã–≤–∞–ª–æ –ª–∏, —á—Ç–æ –≤—ã –æ—Ç–∫–ª–∞–¥—ã–≤–∞–ª–∏ –≤–∞–∂–Ω—ã–µ –¥–µ–ª–∞, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ –æ–¥–Ω—É —Å–µ—Ä–∏—é –ª—é–±–∏–º–æ–≥–æ —Å–µ—Ä–∏–∞–ª–∞?",
                    "–ü—Ä–µ–¥–ø–æ—á–ª–∏ –±—ã –≤—ã –∑–∞–∫–∞–∑–∞—Ç—å –µ–¥—É –¥–æ—Å—Ç–∞–≤–∫–æ–π, –¥–∞–∂–µ –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –≥–æ—Ç–æ–≤–∫–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ –ª–µ–Ω—å –≥–æ—Ç–æ–≤–∏—Ç—å?"]
anketa = Anketa(anketa_questions)

markup = ReplyKeyboardMarkup(resize_keyboard=True)
markup.add(KeyboardButton("–î–∞"))
markup.add(KeyboardButton("–ù–µ—Ç"))

restart_markup = ReplyKeyboardMarkup(resize_keyboard=True)
restart_markup.add(KeyboardButton("/restart"))

def is_yes_or_no(answer):
    return answer.lower() in ['–¥–∞', '–Ω–µ—Ç']

@bot.message_handler(commands=['help'])
def handle_help(message):
    bot.send_message(message.chat.id, get_help())

@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(message.chat.id, get_start())


@bot.message_handler(commands=['Lets_go'])
def handle_Lets_go(message):
    bot.send_message(message.chat.id, anketa.get_question(message.from_user.id), reply_markup=markup)


@bot.message_handler(commands=['restart'])
def handle_restart(message):
    anketa.load_progress(anketa_file)
    bot.send_message(message.chat.id, "–ê–Ω–∫–µ—Ç–∞ —Å–±—Ä–æ—à–µ–Ω–∞. –ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ.")
    handle_start(message)



@bot.message_handler()
def handle_answer(message):
    current_question = anketa.get_question(message.from_user.id)
    if current_question is not None:
        if is_yes_or_no(message.text):
            anketa.process_answer(message.from_user.id, message.text)
            next_question = anketa.get_question(message.from_user.id)
            if next_question:
                bot.send_message(message.chat.id, next_question, reply_markup=markup)
            else:
                world = anketa.get_score()
                bot.send_message(message.chat.id, f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {world}. \n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /restart, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", reply_markup=restart_markup)
                anketa.save_progress(anketa_file)
                gif_path = anketa.get_gif()
                gif_description = anketa.get_gif_description()
                if gif_path:
                    with open(gif_path, "rb") as gif_file:
                        bot.send_document(message.chat.id, InputFile(gif_file, 'file.gif'), caption = f"<b>{gif_description}</b>", parse_mode="HTML")
                else:
                    bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ GIF-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")
                anketa.reset()  # –î–æ–±–∞–≤–∏–º —Å–±—Ä–æ—Å –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        else:
            bot.send_message(message.chat.id, "–í–∞—à –æ—Ç–≤–µ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω. –ù–∞–ø–∏—à–∏—Ç–µ '–î–∞' –∏–ª–∏ '–ù–µ—Ç'. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /restart, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", reply_markup=restart_markup)





if __name__ == '__main__':
    bot.polling()